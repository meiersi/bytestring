Name:                bytestring
Version:             0.10.0.0
Synopsis:            Time and space efficient manipulation of sequences of bytes.

Description:
    Data structures for the time and space efficient manipulation of sequences
    of bytes.
    .
    Three data structures are provided:
    .
      * Strict 'ByteString's keep the bytes as a single large array. This
        makes them convenient for passing data between C and Haskell.
    .
      * Lazy 'ByteString's use a lazy list of strict bytestrings which makes
        them suitable for I\/O streaming tasks.
    .
      * Lazy bytestring 'Builder's represent sequences of bytes and support
        an /O(1)/ append operations. This makes them well-suited for
        incrementally constructing lazy 'ByteString's from pieces, e.g.,
        constructing a HTTP response.
    .
    The @Char8@ modules provide a character-based view of the same
    underlying 'ByteString' types. This makes it convenient to handle mixed
    binary and 8-bit character content (which is common in many file formats
    and network protocols).
    .
    'ByteString's are not designed for Unicode. For Unicode strings you should
    use the 'Text' type from the @text@ package.
    .
    These modules are intended to be imported qualified, to avoid name clashes
    with "Prelude" functions, e.g.
    .
    > import qualified Data.ByteString as BS

License:             BSD3
License-file:        LICENSE
Category:            Data
Copyright:           Copyright (c) Don Stewart          2005-2009,
                               (c) Duncan Coutts        2006-2011,
                               (c) David Roundy         2003-2005,
                               (c) Jasper Van der Jeugt 2010,
                               (c) Simon Meier          2010-2012.

Author:              Don Stewart,
                     Duncan Coutts,
                     Simon Meier
Maintainer:          Don Stewart <dons00@gmail.com>,
                     Duncan Coutts <duncan@community.haskell.org>,
                     Simon Meier <iridcode@gmail.com>
Bug-reports:         dons00@gmail.com,
                     duncan@community.haskell.org
Tested-With:         GHC==7.4.1, GHC==7.2.1, GHC==7.0.4, GHC==6.12.3
Build-Type:          Simple
Cabal-Version:       >= 1.8
extra-source-files:  README TODO

source-repository head
  type:     darcs
  location: http://darcs.haskell.org/bytestring/

library
  build-depends:     base >= 3 && < 5, deepseq

  if impl(ghc >= 6.10)
    build-depends:   ghc-prim, base >= 4

  exposed-modules:   Data.ByteString
                     Data.ByteString.Char8
                     Data.ByteString.Unsafe
                     Data.ByteString.Internal
                     Data.ByteString.Lazy
                     Data.ByteString.Lazy.Char8
                     Data.ByteString.Lazy.Internal

                     Data.ByteString.Lazy.Builder
                     Data.ByteString.Lazy.Builder.Extras
                     Data.ByteString.Lazy.Builder.ASCII
  other-modules:
                     Data.ByteString.Builder.ASCII
                     Data.ByteString.Builder.Prim.Binary
                     Data.ByteString.Builder.Prim.ASCII
                     Data.ByteString.Builder.Prim.Internal.Floating
                     Data.ByteString.Builder.Prim.Internal.UncheckedShifts
                     Data.ByteString.Builder.Prim.Internal.Base16

  extensions:        CPP,
                     ForeignFunctionInterface,
                     BangPatterns
                     UnliftedFFITypes,
                     MagicHash,
                     UnboxedTuples,
                     DeriveDataTypeable
                     ScopedTypeVariables
                     Rank2Types
                     NamedFieldPuns

  ghc-options:      -Wall
                    -O2
                    -fmax-simplifier-iterations=10
                    -fdicts-cheap
                    -fspec-constr-count=6

  c-sources:         cbits/fpstring.c
                     cbits/itoa.c
                     cbits/varint.c
  include-dirs:      include
  includes:          fpstring.h
  install-includes:  fpstring.h


-- QC properties, with GHC RULES disabled
test-suite prop-compiled
  type:             exitcode-stdio-1.0
  main-is:          Properties.hs
  other-modules:    Rules
                    QuickCheckUtils
                    TestFramework
  hs-source-dirs:   . tests
  build-depends:    base, ghc-prim, deepseq, random, directory,
                    QuickCheck >= 2.3 && < 3
  c-sources:        cbits/fpstring.c
  include-dirs:     include
  ghc-options:      -fwarn-unused-binds
                    -fno-enable-rewrite-rules
  extensions:       BangPatterns
                    UnliftedFFITypes,
                    MagicHash,
                    UnboxedTuples,
                    DeriveDataTypeable
                    ScopedTypeVariables
                    NamedFieldPuns

test-suite test-builder
  type:             exitcode-stdio-1.0
  hs-source-dirs:   . tests tests/builder
  main-is:          TestSuite.hs
  other-modules:    Data.ByteString.Builder.Tests
                    Data.ByteString.Builder.Prim.Tests
                    Data.ByteString.Builder.Prim.TestUtils
                    Data.ByteString.Builder.Prim.Extra
                    TestFramework

  build-depends:    base, ghc-prim,
                    deepseq,
                    QuickCheck                 >= 2.4 && < 3,
                    byteorder                  == 1.0.*,
                    dlist                      == 0.5.*,
                    directory                  >= 1.0 && < 1.2,
                    mtl                        >= 2.0 && < 2.2

  ghc-options:      -Wall -fwarn-tabs

  extensions:       CPP, ForeignFunctionInterface
                    UnliftedFFITypes,
                    MagicHash,
                    UnboxedTuples,
                    DeriveDataTypeable
                    ScopedTypeVariables
                    Rank2Types
                    BangPatterns
                    NamedFieldPuns

  c-sources:        cbits/fpstring.c
                    cbits/itoa.c
                    cbits/varint.c
  include-dirs:     include
  includes:         fpstring.h
  install-includes: fpstring.h
  -- flags for the decimal integer serialization code
  if impl(ghc >= 6.11)
    cpp-options: -DINTEGER_GMP
    build-depends: integer-gmp >= 0.2 && < 0.5

  if impl(ghc >= 6.9) && impl(ghc < 6.11)
    cpp-options: -DINTEGER_GMP
    build-depends: integer >= 0.1 && < 0.2

benchmark bench-builder-all
  type:             exitcode-stdio-1.0
  hs-source-dirs:   . bench
  main-is:          BenchAll.hs
  build-depends:    base, deepseq, ghc-prim,
                    criterion
  c-sources:        cbits/fpstring.c
                    cbits/itoa.c
  include-dirs:     include
  ghc-options:      -O2
                    -fmax-simplifier-iterations=10
                    -fdicts-cheap
                    -fspec-constr-count=6

benchmark bench-builder-boundscheck
  type:             exitcode-stdio-1.0
  hs-source-dirs:   . bench
  main-is:          BoundsCheckFusion.hs
  build-depends:    base, deepseq, ghc-prim,
                    criterion
  c-sources:        cbits/fpstring.c
                    cbits/itoa.c
  include-dirs:     include
  ghc-options:      -O2
                    -fmax-simplifier-iterations=10
                    -fdicts-cheap
                    -fspec-constr-count=6